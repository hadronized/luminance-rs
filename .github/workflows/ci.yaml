name: CI
on: [pull_request]

jobs:
  build-linux:
    strategy:
      matrix:
        rustc: ["nightly"]
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxrandr-dev xorg-dev libsdl2-dev
      - uses: actions/checkout@v2
      - name: Build
        run: |
          rustup default ${{ matrix.rustc }}
          cargo build
          cargo test

  build-windows:
    strategy:
      matrix:
        rustc: ["nightly"]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          rustup default ${{ matrix.rustc }}
          cargo build
          cargo test

  build-macosx:
    strategy:
      matrix:
        rustc: ["nightly"]
    runs-on: macOS-latest
    steps:
      - name: Install dependencies
        run: brew install SDL2
      - uses: actions/checkout@v2
      - name: Build
        run: |
          rustup default ${{ matrix.rustc }}
          cargo build
          cargo test

  # build-wasm:
  #   strategy:
  #     matrix:
  #       rustc: ["nightly"]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Install rustup WASM toolchain
  #       run: |
  #         rustup default ${{ matrix.rustc }}
  #         rustup target install wasm32-unknown-unknown
  #     - uses: actions/checkout@v2
  #     - name: Build
  #       run: |
  #         cd $GITHUB_WORKSPACE/luminance-webgl
  #         cargo build
  #         cd $GITHUB_WORKSPACE/luminance-web-sys
  #         cargo build
  #         cd $GITHUB_WORKSPACE/examples/web
  #         yarn install
  #         yarn build

  functional-tests-desktop:
    strategy:
      matrix:
        rustc: ["nightly"]
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxrandr-dev xorg-dev libsdl2-dev
      - uses: actions/checkout@v2
      - name: Functional testing
        run: |
          rustup default ${{ matrix.rustc }}
          cd examples/desktop
          cargo check --features funtest,funtest-gl33-f64-uniform
  
  # functional-tests-web:
  #   strategy:
  #     matrix:
  #       rustc: ["nightly"]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Install rustup WASM toolchain
  #       run: |
  #         rustup default ${{ matrix.rustc }}
  #         rustup target install wasm32-unknown-unknown
  #     - uses: actions/checkout@v2
  #     - name: Functional testing
  #       run: |
  #         cd examples/web
  #         cargo check --features funtest

  quality:
    strategy:
      matrix:
        rustc: ["nightly"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          rustup default ${{ matrix.rustc }}
          rustup component add rustfmt
      - name: rustfmt
        run: |
          cargo fmt -- --check
